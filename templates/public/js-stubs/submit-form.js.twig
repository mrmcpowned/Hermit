$('select').select2();

$('[data-validation-group]').on('change', validateCheck);

function validateCheck() {
    let checkedVal = $(this).val();
    let validationGroup = $(this).attr("data-validation-group");
    $(`[data-validation-group=${validationGroup}]`).each(function(){
        $(this)[0].setCustomValidity("Entries do not match");
    });
    $(`[data-validation-group=${validationGroup}]`).each(function(){
        let valueToCheck = $(this).val();
        if(checkedVal === valueToCheck){
            $(this)[0].setCustomValidity("");
        }
    });
}

// language=ECMAScript 6
function createMessage(response, type = 'error') {
    let msgs = $(`{% include 'html-stubs/error-messages.html.twig' %}`);
    msgs.addClass(type);
    $(".page").prepend(msgs);
    for(let entry in response){
        if(!response.hasOwnProperty(entry))
            continue;

        let newHtml = $("#messages .content").append(`<div class="message"><h4>${entry}</h4><ul></ul></div>`);
        if(response.length > 1) {
            for (let i = 0; i < response[entry].length; i++) {
                newHtml.find("ul").append(`<li>${response[entry][i]}</li>`)
            }
        } else {
            newHtml.find("ul").remove();
            newHtml.append(`<p>${response[entry]}</p>`);
        }
    }
}

$('.page').on('click touch', '#messages', function () {
    $(this).remove();
})

{#let formIsSubmitting = false;#}
$("form").on("submit", function (event) {
    event.preventDefault();
    let currentForm = $(this);
    let formIsSubmitting = (currentForm.attr("data-sending") == 'true');

    if(formIsSubmitting)
        return;

    console.log("Starting to send");
    let formData = new FormData(this);

    let address = this.action;
    $.ajax({
        method: "POST",
        url: address,
        data: formData,
        contentType: false,
        processData: false,
        dataType: "json",
        beforeSend: function () {
            currentForm.attr("data-sending", true);
            $("#messages").remove();
        }
    }).fail(function (jqXHR, textStatus) {
        {% block fail %}
        let response = jqXHR.responseJSON;
        if(textStatus === "parsererror" || !response) {
            console.log("Error parsing request: ", jqXHR.responseText);
        } else {
            createMessage(response.errors);
        }
        window.scrollTo(0,0);
        {% endblock %}
    }).done(function (data) {
        currentForm[0].reset();
        {% block done %}
        window.location.reload(true);
        {% endblock %}
    }).always(function (data) {
        currentForm.attr("data-sending", false);
        {% block always %}
        if(typeof grecaptcha !== "undefined")
            grecaptcha.reset();

        {% endblock %}
    })
})